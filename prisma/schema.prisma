generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id         String      @id @default(uuid())
  name       String
  userId     String
  billboards Billboard[] @relation("StoreToBillBoard")
  Category   Category[]  @relation("StoreToCategory")
  Size       Size[]      @relation("StoreToSize")
  Color      Color[]     @relation("StoreToColor")
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Billboard {
  id        String     @id @default(uuid())
  label     String
  imageUrl  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  storeId   String
  Store     Store      @relation("StoreToBillBoard", fields: [storeId], references: [id])
  Category  Category[]

  @@index([storeId])
}

model Category {
  id          String    @id @default(uuid())
  storeId     String
  store       Store     @relation("StoreToCategory", fields: [storeId], references: [id])
  billboardId String
  billboard   Billboard @relation(fields: [billboardId], references: [id])
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id      String @id @default(uuid())
  name    String
  value   String
  storeId String
  Store   Store  @relation("StoreToSize", fields: [storeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Color {
  id      String @id @default(uuid())
  name    String
  value   String
  storeId String
  Store   Store  @relation("StoreToColor", fields: [storeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}
